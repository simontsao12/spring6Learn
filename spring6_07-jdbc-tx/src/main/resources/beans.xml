<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 組件掃描 -->
    <context:component-scan base-package="com.atsimoncc.spring6.tx"></context:component-scan>
    <!-- 引入外部屬性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!-- 完成資料庫訊息注入 -->
    <!--
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="username" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    -->
    <!-- 創建jdbc Template物件 注入資料源 -->
    <!--
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>
    -->
    <!--
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>
    -->
    <!--
    	開啟交易的注解驅動
    	通過注解 @Transactional 所標示的方法或標示的類中所有的方法 都會被交易管理器管理交易
    -->
    <!--
    	transaction-manager 屬性的預設值是 transactionManager
    	如果交易管理器 bean 的 id 正好是這個預設值則可以省略此屬性
    -->
    <!--
    <tx:annotation-driven transaction-manager="transactionManager"/>
    -->
</beans>